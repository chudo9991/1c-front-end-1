Set-Location F:\Stanislav\Workspace\GitHub\1c-front-end\example_19


//             Листинг 7.1 index.html

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Browserify</title>
</head>
    <body>
        <button type="button">Alert!</button>
        <script src="bundle.js"></script>
    </body>
</html>


//               Листинг 7.2 main.js

var $ = require("jquery");

$("button").on("click", function() {
    alert("Hello, World!");
});


// 7.1.3

//               Листинг 7.3 dependency.js

function f(x) {
    ...
}

module.exports = {
    act: f
};


// Листинг 7.4 main.js
var var dependency = reguire("./dependency.jr");
...
dependency.act(42);


// 7.2.1

//                Листинг 7.5 header.vue

<!-- атрибут scoped гарантирует, что
    стили будут действовать только
    в предлах данной компоненты  -->

<style scoped>
   h1 {
   color: blue;
   }
</style>

<template>
   <h1>{{ msg }}</h1>
</template>

<script>
   module.exports = {
      data: function() {
      /* у компоненты поле data должна быть
          функция, возращающая словарь данных */
      return {
         msg: "Hello, component!"
         };
      }
   };
</script>


//                Листинг 7.6 index.html

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Компонента</title>
</head>
    <body>
        <c-tag></c-tag>
        <script src="bundle.js"></script>
    </body>
</html>


//                 Листинг 7.7 main.js

var Vue = require("vue");
var Header = require("./header.vue");

var vm = new Vue({
    el: "body",
    components: {
        cTag: Header
    }
});

// 7.2.2

//                 Листинг 7.8 par-cap.vue
<template>
    <p>{{ pText.toUpperCase() }}</p>
</template>

<script>
    module.exports = {
        props: ["pText"]
    };
</script>


//                  Листинг 7.9 index.html

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Компонента2</title>
</head>
    <body>
        <input type="text" v-model="message">
        <par-cap v-bind:p-text="massage"></par-cap>
        <script src="bundle.js"></script>
    </body>
</html>



//                  Листинг 7.10 main.js

var Vue = require("vue");
var ParCap = require("./par-cap.vue");

var vm = new Vue({
    el: "body",
    data: {
        maessage: "Hello, components!"
    },
    components: {
        parCap: ParCap
    }
});


// 7.2.3

//                   Листинг 7.11 search.vue

<template>
    <input type="text" v-model="query" v-on:keydown.enter="sendQuery">
    <button type="button" v-on:click="sendQuery">Найти!</button>
</template>

<script>
    module.exports = {
        data: function() {
            return { query: "" };
        },
        methods: {
            sendQuery: function() {
                /* рассылка сообщения find */
                this.$dispatch("find", this.query);
            }
        }
    };
</script>


//                  Листинг 7.12 index.html

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Сообщения</title>
</head>
    <body>
        <search></search>
        <p>Поиск по запросу: {{ text }}</p>
        <script src="bundle.js"></script>
    </body>
</html>

//                 Листинг 7.13 main.js

var Vue = require("vue");
var Search = require("./search.vue");

var vm = new Vue({
    el: "body",
    data: {
        text: ""
    },
    components: {
        search: Search
    },
    events: {
        /* обработчик сообщения find */
        find: function(query) {
            this.text = query;
            /* разрешаем всплывание */
            return true;
        }
    }
});
